<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zero.auth.mapper.ResourcesMapper">

    <resultMap id="resultMap" type="com.zero.auth.entity.Resources">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="uri" jdbcType="VARCHAR" property="uri"/>
        <result column="method_type" jdbcType="VARCHAR" property="methodType"/>
        <result column="description" jdbcType="BOOLEAN" property="description"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="create_user_id" jdbcType="INTEGER" property="createUserId"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="update_user_id" jdbcType="INTEGER" property="updateUserId"/>
        <result column="deleted" jdbcType="BOOLEAN" property="deleted" />
        <collection property="roles" ofType="com.zero.auth.entity.Role">
            <id column="rid" jdbcType="INTEGER" property="id"/>
            <result column="role_name" jdbcType="VARCHAR" property="name"/>
            <result column="role_description" jdbcType="VARCHAR" property="description"/>
        </collection>
    </resultMap>

    <sql id="baseColumn">
        `id`, `uri`, `method_type`, `description`
    </sql>

    <sql id="baseQuery">
        <if test="queryResources.uri != null and queryResources.uri != ''">
            and uri like concat('%', #{queryResources.uri}, '%')
        </if>
        <if test="queryResources.methodType != null and queryResources.methodType != ''">
            and method_type = #{queryResources.methodType}
        </if>
        <if test="queryResources.description != null and queryResources.description != ''">
            and description like concat('%', #{queryResources.description}, '%')
        </if>
        <if test="queryResources.deleted != null">
            and deleted = #{queryResources.deleted}
        </if>
    </sql>

    <select id="getPage" resultMap="resultMap">
        select `id` as id,`uri` as uri,`description` as description,
        `method_type` as method_type
        from auth_resources
        <where>
            <include refid="baseQuery"/>
            <if test="queryResources.queryRoleId != null">
                and id in (select resources_id from auth_resources_role where role_id = #{queryResources.queryRoleId})
            </if>
        </where>
    </select>

    <select id="getList" resultMap="resultMap">
        select `id` as id,`uri` as uri,`description` as description,
        `method_type` as method_type
        from auth_resources
        where deleted = 0
        <include refid="baseQuery"/>
        <if test="queryResources.queryRoleId != null">
            and id in (select resources_id from auth_resources_role where role_id = #{queryResources.queryRoleId})
        </if>
    </select>

    <select id="getByUriAndMethodType" resultMap="resultMap">
        select ares.id as id,ares.uri as uri,ares.description as description,
        ar.id as rid,ar.name as role_name,ar.description as role_description
        from auth_resources ares
        left join auth_resources_role aresr on aresr.resources_id = ares.id
        left join auth_role ar on ar.id = aresr.role_id
        where ares.uri = #{uri} and ares.method_type = #{methodType}
    </select>


</mapper>